# ---------------------------------------------------------
# Classic Spring Boot configuration
# HTTP rest path
server.servlet.context-path=/api

spring.h2.console.enabled=true
# By default use HikariDataSource with pool
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
# Do not need this driver property ? See https://howtodoinjava.com/spring-boot2/datasource-configuration/
# We often do not need to specify the driver-class-name, since Spring Boot can deduce it for most databases from the url !
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# NO JPA here so need this datasource initialization
spring.datasource.initialization-mode=always
spring.datasource.schema=classpath*:db/my_schema.sql
spring.datasource.data=classpath:/db/runtime.sql
# ---------------------------------------------------------
# Apache camel component starter configuration like "camel.component.[component-name].[parameter]"

# to keep the JVM running (only need when running Spring Boot standalone, i.e. not with spring-boot-starter-web)
# camel.springboot.main-run-controller = true

# setup camel-activemq-starter with the url of the remote broker
# you can change the port number to 61617 and reconfigure conf/activemq.xml to use port 61617 instead of 61616
# to try using a different port than the default
camel.component.activemq.broker-url=tcp://localhost:61616
camel.component.activemq.acknowledgement-mode-name=SESSION_TRANSACTED
camel.component.activemq.cache-level-name=CACHE_CONSUMER
camel.component.activemq.lazy-create-transaction-manager=false
camel.component.activemq.transacted=true
# ---------------------------------------------------------